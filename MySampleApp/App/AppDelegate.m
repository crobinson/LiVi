//
//  AppDelegate.m
//  MySampleApp
//
//
// Copyright 2016 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to 
// copy, distribute and modify it.
//
// Source code generated from template: aws-my-sample-app-ios-objc v0.6
//
#import <AVFoundation/AVFoundation.h>
#import "AppDelegate.h"
#import "AWSMobileClient.h"
//#import <ParseFacebookUtilsV4/PFFacebookUtils.h>
#import <Parse/Parse.h>
#import "RequestNotificationViewController.h"
#import "ChatViewController.h"
//#import "AWSPushManager.h"

@interface AppDelegate ()

@end

@implementation AppDelegate

- (BOOL)application:(UIApplication *)application
didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {
    NSLog(@"application didFinishLaunchingWithOptions");
    
    if (launchOptions != nil)
    {
        NSDictionary *dictionary = [launchOptions objectForKey:UIApplicationLaunchOptionsRemoteNotificationKey];
        NSDictionary *dictionary2 = [launchOptions objectForKey:UIApplicationLaunchOptionsRemoteNotificationKey];
        NSLog(@"%@, %@", dictionary, dictionary2);
        if (dictionary != nil)
        {
            
            /*UIAlertView *alert = [[UIAlertView alloc] initWithTitle: @"Your Custom Title"
                                                            message: [NSString stringWithFormat:@"Launched from push notification: %@", dictionary]
                                                           delegate: self
                                                  cancelButtonTitle: @"OK"
                                                  otherButtonTitles: nil];
            [alert show];*/
            NSDictionary *message = [dictionary objectForKey:@"aps"];
            
            UIAlertView *alert = [[UIAlertView alloc] initWithTitle: @"Your Custom Title"
                                                            message: message[@"alert"]
                                                           delegate: self
                                                  cancelButtonTitle: @"OK"
                                                  otherButtonTitles: nil];
            [alert show];
            
            NSLog(@"Launched from push notification: %@", dictionary);
            //[self addMessageFromRemoteNotification:dictionary updateUI:NO];
        }
    }
    
    [Parse setApplicationId:@"BsIBfZnR1xUg1ZY9AwGcd3iKtqrMPu2zUTjP49ta" clientKey:@"E2od7oEslPMj6C2yG9GnWXvC9qDicnTNgcDgN9xm"];
    
     //[PFFacebookUtils initializeFacebookWithApplicationLaunchOptions:launchOptions];
    
    UIUserNotificationType userNotificationTypes = (UIUserNotificationTypeAlert |
                                                    UIUserNotificationTypeBadge |
                                                    UIUserNotificationTypeSound);
    UIUserNotificationSettings *settings = [UIUserNotificationSettings settingsForTypes:userNotificationTypes
                                                                             categories:nil];
    [application registerUserNotificationSettings:settings];
    [application registerForRemoteNotifications];
    
    
    
    // Override point for customization after application launch.
    return [[AWSMobileClient sharedInstance] didFinishLaunching:application
                                             withOptions:launchOptions];
    
    // Initialize Parse.
    /*[Parse initializeWithConfiguration:[ParseClientConfiguration configurationWithBlock:^(id<ParseMutableClientConfiguration> configuration) {
        configuration.applicationId = @"BsIBfZnR1xUg1ZY9AwGcd3iKtqrMPu2zUTjP49ta";
        //configuration.server = @"http://YOUR_PARSE_SERVER:1337/parse";
        configuration.server = @"https://api.parse.com";
    }]];*/
    
    
    
    //NSString *platformARN = @"arn:aws:sns:us-east-1:752818564425:app/APNS_SANDBOX/livi_MOBILEHUB_2026985135";
    
   // [AWSPushManager defaultPushManager].defaultPlatformARN = platformARN;
    
   // return [[AWSPushManager defaultPushManager] interceptApplication:application
     //                                  didFinishLaunchingWithOptions:launchOptions];


}


- (BOOL)application:(UIApplication *)application
            openURL:(NSURL *)url
  sourceApplication:(NSString *)sourceApplication
         annotation:(id)annotation {
    NSLog(@"application application: %@, openURL: %@, sourceApplication: %@", application.description, url.absoluteURL,
          sourceApplication);

    return [[AWSMobileClient sharedInstance] withApplication:application
                                                     withURL:url
                                       withSourceApplication:sourceApplication
                                              withAnnotation:annotation];
    /*return [[FBSDKApplicationDelegate sharedInstance] application:application
                                                          openURL:url
                                                sourceApplication:sourceApplication
                                                       annotation:annotation];*/
}

- (void)applicationWillResignActive:(UIApplication *)application {
    // Sent when the application is about to move from active to inactive state. This can occur for certain types of temporary interruptions (such as an incoming phone call or SMS message) or when the user quits the application and it begins the transition to the background state.
    // Use this method to pause ongoing tasks, disable timers, and throttle down OpenGL ES frame rates. Games should use this method to pause the game.
}

- (void)applicationDidEnterBackground:(UIApplication *)application {
    // Use this method to release shared resources, save user data, invalidate timers, and store enough application state information to restore your application to its current state in case it is terminated later.
    // If your application supports background execution, this method is called instead of applicationWillTerminate: when the user quits.
}

- (void)applicationDidBecomeActive:(UIApplication *)application {
    NSLog(@"applicationDidBecomeActive");
    application.applicationIconBadgeNumber = 0;
    // Restart any tasks that were paused (or not yet started) while the application was inactive. If the application was previously in the background, optionally refresh the user interface.
    [[AWSMobileClient sharedInstance] applicationDidBecomeActive:application];
    //[FBSDKAppEvents activateApp];
}

- (void)applicationWillTerminate:(UIApplication *)application {
    // Called when the application is about to terminate. Save data if appropriate. See also applicationDidEnterBackground:.
}

- (void)applicationWillEnterForeground:(UIApplication *)application {
    // Called as part of the transition from the background to the inactive state; here you can undo many of the changes made on entering the background.
    
    // Clear the badge icon when you open the app.
    [UIApplication sharedApplication].applicationIconBadgeNumber = 0;
}

- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken {
    NSLog(@"deviceToken: %@", deviceToken);
   // [[AWSMobileClient sharedInstance] application:application didRegisterForRemoteNotificationsWithDeviceToken:deviceToken];
    [[NSUserDefaults standardUserDefaults] setObject:deviceToken forKey:@"deviceToken"];
    PFInstallation *currentInstallation = [PFInstallation currentInstallation];
    [currentInstallation setDeviceTokenFromData:deviceToken];
    if([PFUser currentUser])
        currentInstallation[@"user"] = [PFUser currentUser];
    
    [currentInstallation saveInBackground];
    
    /*[[AWSPushManager defaultPushManager] interceptApplication:application
             didRegisterForRemoteNotificationsWithDeviceToken:deviceToken];*/
    
    
}

- (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error {
    //[[AWSMobileClient sharedInstance] application:application didFailToRegisterForRemoteNotificationsWithError:error];
    
    /*[[AWSPushManager defaultPushManager] interceptApplication:application
             didFailToRegisterForRemoteNotificationsWithError:error];*/

}

- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(void (^)(UIBackgroundFetchResult))completionHandler {
    NSLog(@"Received notification: %@", userInfo);
    
    //I would like to find out which view controller is on the screen here.
    
    
    if(application.applicationState == UIApplicationStateInactive) {
        
        NSLog(@"Inactive");
        
        if([userInfo valueForKey:@"name"]!=nil){
            if([userInfo[@"name"] isEqualToString:@"TaskMessage"]){
                if([self.window.rootViewController isKindOfClass:[UINavigationController class]]){
                    UINavigationController * mynavigation = (UINavigationController*)_window.rootViewController;
                    //Push to notifications
                    UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Notificaciones" bundle:nil];
                    UIViewController *viewController = [storyboard instantiateViewControllerWithIdentifier:@"Notificaciones"];
                    [mynavigation pushViewController:viewController
                                            animated:YES];
                }
            }
        }
    } else if (application.applicationState == UIApplicationStateBackground) {
        
        NSLog(@"Background");
        
        if([userInfo valueForKey:@"name"]!=nil){
            if([userInfo[@"name"] isEqualToString:@"TaskMessage"]){
                if([self.window.rootViewController isKindOfClass:[UINavigationController class]]){
                    UINavigationController * mynavigation = (UINavigationController*)_window.rootViewController;
                    //Push to notifications
                    UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Notificaciones" bundle:nil];
                    UIViewController *viewController = [storyboard instantiateViewControllerWithIdentifier:@"Notificaciones"];
                    [mynavigation pushViewController:viewController
                                            animated:YES];
                }
            }
        }
        
        
    } else {
        
        NSLog(@"Active");
        NSLog(@"%@", userInfo);
        
        
        if([userInfo valueForKey:@"name"]!=nil){
            if([userInfo[@"name"] isEqualToString:@"TaskMessage"]){
                UIViewController *vc = [(UINavigationController *)self.window.rootViewController topViewController];
                NSLog(@"%@", [vc class]);
                //[vc performSelector:@selector(handleThePushNotification:) withObject:userInfo];
                if ([vc isKindOfClass: [ChatViewController class]]) {
                    [vc performSelector:@selector(handleThePushNotification:) withObject:userInfo];
                }else{
                    UILocalNotification *localNotification = [[UILocalNotification alloc] init];
                    NSString *message = [[userInfo valueForKey:@"aps"] valueForKey:@"alert"];
                    localNotification.applicationIconBadgeNumber =0;
                    localNotification.alertBody =message;
                    localNotification.soundName = UILocalNotificationDefaultSoundName;
                    localNotification.fireDate = [NSDate dateWithTimeIntervalSinceNow:0];
                    localNotification.timeZone = [NSTimeZone defaultTimeZone];
                    [[UIApplication sharedApplication] scheduleLocalNotification:localNotification];
                }
            }else{
                UINavigationController * mynavigation = (UINavigationController*)_window.rootViewController;
                //Push to notifications
                UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Notificaciones" bundle:nil];
                UIViewController *viewController = [storyboard instantiateViewControllerWithIdentifier:@"Notificaciones"];
                [mynavigation pushViewController:viewController
                                        animated:YES];
            }
            
        }
        

        [PFPush handlePush:userInfo];
        
    }
    
    completionHandler(UIBackgroundFetchResultNewData);
}

- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo {
    UILocalNotification *localNotification = [[UILocalNotification alloc] init];
    NSString *message = [[userInfo valueForKey:@"aps"] valueForKey:@"alert"];
    localNotification.applicationIconBadgeNumber =0;
    localNotification.alertBody =message;
    localNotification.soundName = UILocalNotificationDefaultSoundName;
    localNotification.fireDate = [NSDate dateWithTimeIntervalSinceNow:0];
    localNotification.timeZone = [NSTimeZone defaultTimeZone];
    [[UIApplication sharedApplication] scheduleLocalNotification:localNotification];
    /*NSString *message = [userInfo objectForKey:@"alert"];
    
    UIAlertView *alert = [[UIAlertView alloc] initWithTitle: @"Livi"
                                                    message: message
                                                   delegate: self
                                          cancelButtonTitle: @"OK"
                                          otherButtonTitles: nil];
    [alert show];*/
    
    //[[AWSMobileClient sharedInstance] application:application didReceiveRemoteNotification:userInfo];
    
    /*[[AWSPushManager defaultPushManager] interceptApplication:application
                                 didReceiveRemoteNotification:userInfo];*/
   /* NSLog(@"%@", userInfo);
    [PFPush handlePush:userInfo];
    
    UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Notificaciones" bundle:nil];
    UIViewController *viewController = [storyboard instantiateViewControllerWithIdentifier:@"RequestNotification"];
    [self.window.rootViewController presentViewController:viewController
                       animated:YES
                     completion:nil];
    
    if ([userInfo objectForKey:@"alert"]) {
        NSString *message = [userInfo objectForKey:@"alert"];
        
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle: @"Your Custom Title"
                                                        message: message
                                                       delegate: self
                                              cancelButtonTitle: @"OK"
                                              otherButtonTitles: nil];
        [alert show];
    }
    
    if ([userInfo objectForKey:@"badge"]) {
        [application setApplicationIconBadgeNumber:0];
    }
    
    */
}




@end
